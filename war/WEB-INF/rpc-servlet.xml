<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
                           http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.6.xsd">

    <!--
     **************************************
      Mappings for client-visible services
     **************************************
    -->

    <!-- This makes the @Secured annotations use "and" logic rather than "or" logic. -->
    <!-- See: http://rockycode.com/blog/and-spring-secured-roles/ -->
    <bean id="roleVoter" class="org.springframework.security.vote.RoleVoter" />
    <bean id="unanimousDecisionManager" class="org.springframework.security.vote.UnanimousBased">
        <property name="decisionVoters">
            <list><ref bean="roleVoter" /></list>
        </property>
        <property name="allowIfAllAbstainDecisions" value="false" />
    </bean>

    <!-- This MUST be defined here and not applicationContext.xml
         Otherwise, annotations won't apply to our RPC calls.  It
         only takes effect for beans defined in the same file.  -->
    <security:global-method-security secured-annotations="enabled"
                                     access-decision-manager-ref="unanimousDecisionManager"/>

    <bean id="securedServiceExporterFactory" class="com.cedarsolutions.wiring.gwt.rpc.SecuredServiceExporterFactory">
        <property name="enableXsrfProtection" value="true" />
        <property name="xsrfTokenService" ref="xsrfTokenService" />
    </bean>

    <bean class="org.gwtwidgets.server.spring.GWTHandler">
        <property name="serviceExporterFactory" ref="securedServiceExporterFactory" />
        <property name="mappings">
            <map>
                <entry key="/santaexchange/rpc/adminRpc.rpc" value-ref="adminRpc" />
                <entry key="/santaexchange/rpc/bugReportRpc.rpc" value-ref="bugReportRpc" />
                <entry key="/santaexchange/rpc/clientSessionRpc.rpc" value-ref="clientSessionRpc" />
                <entry key="/santaexchange/rpc/exchangeRpc.rpc" value-ref="exchangeRpc" />
                <entry key="/santaexchange/rpc/gaeUserRpc.rpc" value-ref="gaeUserRpc" />
                <entry key="/santaexchange/rpc/xsrfTokenRpc.rpc" value-ref="xsrfTokenRpc" />
            </map>
        </property>
    </bean>


    <!--
     ******************************
      Configuration and singletons
     ******************************
    -->

    <util:properties id="properties" location="classpath:santa-exchange.properties" />

    <bean id="notificationServiceConfig" class="com.cedarsolutions.santa.server.config.NotificationServiceConfig">
        <property name="properties" ref="properties" />
    </bean>

    <bean id="bugReportServiceConfig" class="com.cedarsolutions.santa.server.config.BugReportServiceConfig">
        <property name="properties" ref="properties" />
    </bean>

    <bean id="exchangeServiceConfig" class="com.cedarsolutions.santa.server.config.ExchangeServiceConfig">
        <property name="properties" ref="properties" />
    </bean>

    <bean id="gaeVelocityUtils" class="com.cedarsolutions.util.gae.GaeVelocityUtils" factory-method="getInstance" scope="singleton" />

    <bean id="gaeEmailUtils" class="com.cedarsolutions.util.gae.GaeEmailUtils" scope="singleton" />

    <bean id="objectifyServiceProxy" class="com.cedarsolutions.dao.gae.impl.ObjectifyServiceProxy" factory-method="getInstance" scope="singleton" />


    <!--
     ********************************
      Client-visible services (RPCs)
     ********************************
    -->

    <bean id="adminRpc" class="com.cedarsolutions.santa.server.rpc.impl.AdminRpc">
        <property name="auditEventService" ref="auditEventService" />
        <property name="auditEventDao" ref="auditEventDao" />
        <property name="registeredUserDao" ref="registeredUserDao" />
    </bean>

    <bean id="bugReportRpc" class="com.cedarsolutions.santa.server.rpc.impl.BugReportRpc">
        <property name="bugReportService" ref="bugReportService" />
    </bean>

    <bean id="clientSessionRpc" class="com.cedarsolutions.santa.server.rpc.impl.ClientSessionRpc">
        <property name="clientSessionService" ref="clientSessionService" />
    </bean>

    <bean id="exchangeRpc" class="com.cedarsolutions.santa.server.rpc.impl.ExchangeRpc">
        <property name="auditEventService" ref="auditEventService" />
        <property name="exchangeService" ref="exchangeService" />
        <property name="clientSessionService" ref="clientSessionService" />
        <property name="exchangeDao" ref="exchangeDao" />
    </bean>

    <bean id="gaeUserRpc" class="com.cedarsolutions.server.rpc.impl.GaeUserRpc">
        <property name="gaeUserService" ref="gaeUserService" />
    </bean>

    <bean id="xsrfTokenRpc" class="com.cedarsolutions.server.rpc.impl.XsrfTokenRpc">
        <property name="xsrfTokenService" ref="xsrfTokenService" />
    </bean>


    <!--
     **********************
      Server-side services
     **********************
    -->

    <bean id="springContextService" class="com.cedarsolutions.server.service.impl.SpringContextService" />

    <bean id="auditEventService" class="com.cedarsolutions.santa.server.service.impl.AuditEventService">
        <property name="auditEventDao" ref="auditEventDao" />
        <property name="clientSessionService" ref="clientSessionService" />
    </bean>

    <bean id="bugReportService" class="com.cedarsolutions.santa.server.service.impl.BugReportService">
        <property name="config" ref="bugReportServiceConfig" />
        <property name="emailService" ref="emailService" />
    </bean>

    <bean id="clientSessionService" class="com.cedarsolutions.santa.server.service.impl.ClientSessionService">
        <property name="gaeUserService" ref="gaeUserService" />
        <property name="springContextService" ref="springContextService" />
        <property name="notificationService" ref="notificationService" />
        <property name="auditEventDao" ref="auditEventDao" />
        <property name="registeredUserDao" ref="registeredUserDao" />
    </bean>

    <bean id="emailService" class="com.cedarsolutions.server.service.impl.GaeEmailService">
        <property name="gaeEmailUtils" ref="gaeEmailUtils" />
        <property name="templateService" ref="templateService" />
    </bean>

    <bean id="exchangeService" class="com.cedarsolutions.santa.server.service.impl.ExchangeService">
        <property name="config" ref="exchangeServiceConfig" />
        <property name="emailService" ref="emailService" />
    </bean>

    <bean id="gaeUserService" class="com.cedarsolutions.server.service.impl.GaeUserService">
        <property name="userService" ref="userService" />
        <property name="springContextService" ref="springContextService" />
    </bean>

    <bean id="notificationService" class="com.cedarsolutions.santa.server.service.impl.NotificationService">
        <property name="config" ref="notificationServiceConfig" />
        <property name="emailService" ref="emailService" />
    </bean>

    <bean id="templateService" class="com.cedarsolutions.server.service.impl.GaeVelocityTemplateService">
        <property name="gaeVelocityUtils" ref="gaeVelocityUtils" />
        <property name="templateDirResource" value="classpath:templates" />
    </bean>

    <bean id="xsrfTokenService" class="com.cedarsolutions.server.service.impl.GwtCookieXsrfTokenService">
        <property name="sessionCookieName" value="JSESSIONID" />
        <property name="springContextService" ref="springContextService" />
    </bean>


    <!--
     ****************************************
      Server-side data access objects (DAOs)
     ****************************************
    -->

    <bean id="daoObjectifyService" class="com.cedarsolutions.dao.gae.impl.DaoObjectifyService">
        <property name="objectifyServiceProxy" ref="objectifyServiceProxy" />
        <property name="entities" value="classpath:managed-entities.txt" />
    </bean>

    <bean id="auditEventDao" class="com.cedarsolutions.santa.server.dao.impl.AuditEventDao">
        <property name="daoObjectifyService" ref="daoObjectifyService" />
    </bean>

    <bean id="exchangeDao" class="com.cedarsolutions.santa.server.dao.impl.ExchangeDao">
        <property name="daoObjectifyService" ref="daoObjectifyService" />
    </bean>

    <bean id="registeredUserDao" class="com.cedarsolutions.santa.server.dao.impl.RegisteredUserDao">
        <property name="daoObjectifyService" ref="daoObjectifyService" />
    </bean>

</beans>
